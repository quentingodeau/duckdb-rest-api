app:
  queries:
    test1:
      verb: POST
      queryBuilderClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.query.DefaultQueryBuilder'
      resultSetConvertorClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.rs.DefaultResultSetConvertor'
      jsonConvertorClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.json.NoOpConvertor'
      payloadClass: 'java.util.Map'
      query: |-
        SELECT str
        FROM MyTable
        WHERE id = :id

    test2:
      verb: POST
      queryBuilderClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.query.DefaultQueryBuilder'
      resultSetConvertorClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.rs.DefaultResultSetConvertor'
      jsonConvertorClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.json.NoOpConvertor'
      payloadStruct:
        str: string
        id: int
      query: "SELECT * FROM read_parquet('${testParquetPath}/str=:str/*.parquet', hive_partitioning=true) WHERE id = :id"
      userQueryParams:
        '[queryBuilder.preParse]': true


    test3:
      verb: POST
      queryBuilderClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.query.DefaultQueryBuilder'
      resultSetConvertorClass: 'fr.qgo.duckdbrestapi.testtools.service.MyResultSetConvertor'
      jsonConvertorClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.json.ObjectConvertor'
      payloadStruct:
        id: int
      query: |-
        SELECT *
        FROM MyTable
        WHERE id = :id
#    select2:
#      doc:
#        summary: Example
#        description: Long description
#      verb: post
#      returnedStruct:
#        simple: int
#        simpleArray: list<string>
#      queryBuilderClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.query.DefaultQueryBuilder'
#      resultSetConvertorClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.rs.DefaultResultSetConvertor'
#      jsonConvertorClass: 'fr.qgo.duckdbrestapi.service.defaultimpl.json.NoOpConvertor'
#      payloadStruct:
#        field1:
#          type: string
#          defaultValue: hello world
#        field2:
#          type: Integer
#        field3:
#          type: int
#        field4:
#          type: list<Integer>
#          defaultValue: '[]'
#        field5:
#          type: set<Integer>
#        field6:
#          type: map<String, Integer>
#      query: |-
#        SELECT 1                as simple,
#               ['a', 'b', 'c']  as simpleArray,
#               {a: 65}          as simpleStruct,
#               {a: 65, b: [58]} as complexStruct,
#
#logging:
#  level:
#    fr.qgo.duckdbrestapi.duckdb.C3P0InitConnection: DEBUG